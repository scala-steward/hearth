package hearth
package typed

import hearth.data.Data

/** Macro implementation is in [[MethodsFixturesImpl]] */
final class MethodsSpec extends MacroSuite {

  group("trait typed.Methods") {

    group(
      "constructors: Method.{primaryConstructorOf[A], defaultConstructorOf[A], constructorsOf[A]}, returns preprocessed constructors"
    ) {
      import MethodsFixtures.testConstructorsExtraction

      test("for class without companion") {
        testConstructorsExtraction[examples.methods.NoCompanionClass] <==> Data.map(
          "primaryConstructor" -> Data("()"),
          "defaultConstructor" -> Data("()"),
          "constructors" -> Data.list(Data("()"))
        )
      }

      test("for class with companion") {
        testConstructorsExtraction[examples.methods.WithCompanion] <==> Data.map(
          "primaryConstructor" -> Data("(arg: scala.Int)"),
          "defaultConstructor" -> Data("<no default constructor>"),
          "constructors" -> Data.list(Data("(arg: scala.Int)"))
        )
      }

      test("for companion object") {
        testConstructorsExtraction[examples.methods.WithCompanion.type] <==> Data.map(
          "primaryConstructor" -> Data("()"),
          "defaultConstructor" -> Data("()"),
          "constructors" -> Data.list(Data("()"))
        )
      }
    }

    group("methods: Method.methodsOf[A], returns preprocessed methods") {
      import MethodsFixtures.testMethodsExtraction

      test("for class without companion") {
        val envDependedPosition =
          if (LanguageVersion.byHearth.isScala2_13) Data("None")
          else Data("Some(hearth-tests/src/main/scala/hearth/examples/methods.scala:1:1)")

        testMethodsExtraction[examples.methods.NoCompanionClass](
          "clone",
          "equals",
          "finalize",
          "getClass",
          "hashCode",
          "notify",
          "notifyAll",
          "toString",
          "wait",
          "asInstanceOf",
          "isInstanceOf",
          "synchronized",
          "==",
          "!=",
          "eq",
          "ne",
          "##"
        ) <==> Data.map(
          "method(Int)" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(1),
            "isNullary" -> Data(false),
            "isUnary" -> Data(true),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          ),
          "methodWithDefault(Int)" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(1),
            "isNullary" -> Data(false),
            "isUnary" -> Data(true),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          ),
          "methodWithAnnotation(Int)" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(Data("new hearth.examples.methods.ExampleAnnotation()")),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(1),
            "isNullary" -> Data(false),
            "isUnary" -> Data(true),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          ),
          "methodWithAnnotatedParam(Int)" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(1),
            "isNullary" -> Data(false),
            "isUnary" -> Data(true),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          ),
          "scalaValue" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(true),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(false),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(0),
            "isNullary" -> Data(true),
            "isUnary" -> Data(false),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(true),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(true),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(true)
          ),
          "scalaVariable" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(true),
            "isLazy" -> Data(false),
            "isDef" -> Data(false),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(0),
            "isNullary" -> Data(true),
            "isUnary" -> Data(false),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(true),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(true),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(true)
          ),
          "scalaVariable_=(Int)" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(true),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(1),
            "isNullary" -> Data(false),
            "isUnary" -> Data(true),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(true),
            "isScalaAccessor" -> Data(true),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(true)
          ),
          "scalaLazyValue" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(true),
            "isVar" -> Data(false),
            "isLazy" -> Data(true),
            "isDef" -> Data(false),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(0),
            "isNullary" -> Data(true),
            "isUnary" -> Data(false),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(true),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(true),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(true)
          ),
          "inheritedAbstractMethod(Int)" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(1),
            "isNullary" -> Data(false),
            "isUnary" -> Data(true),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          ),
          "inheritedFinalMethod(Int)" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(false),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(true),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(1),
            "isNullary" -> Data(false),
            "isUnary" -> Data(true),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          )
        )
      }

      test("for class with companion") {
        val envDependedPosition =
          if (LanguageVersion.byHearth.isScala2_13) Data("None")
          else Data("Some(hearth-tests/src/main/scala/hearth/examples/methods.scala:1:1)")

        testMethodsExtraction[examples.methods.WithCompanion](
          "clone",
          "equals",
          "finalize",
          "getClass",
          "hashCode",
          "notify",
          "notifyAll",
          "toString",
          "wait",
          "asInstanceOf",
          "isInstanceOf",
          "synchronized",
          "==",
          "!=",
          "eq",
          "ne",
          "##",
          "writeReplace" // Scala 3-only, private def for serialization only
        ) <==> Data.map(
          "arg" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(true),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(false),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(false),
            "arity" -> Data(0),
            "isNullary" -> Data(true),
            "isUnary" -> Data(false),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(true),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(true),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(true),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(true)
          ),
          "method(Int)" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(1),
            "isNullary" -> Data(false),
            "isUnary" -> Data(true),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          ),
          "apply(Int)" -> Data.map(
            "invocation" -> Data(
              if (LanguageVersion.byHearth.isScala2_13) "OnModule(WithCompanion)" else "OnModule(Ident(WithCompanion))"
            ),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(1),
            "isNullary" -> Data(false),
            "isUnary" -> Data(true),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          )
        )
      }

      test("for companion object") {
        val envDependedPosition =
          if (LanguageVersion.byHearth.isScala2_13) Data("None")
          else Data("Some(hearth-tests/src/main/scala/hearth/examples/methods.scala:1:1)")

        testMethodsExtraction[examples.methods.WithCompanion.type](
          "clone",
          "equals",
          "finalize",
          "getClass",
          "hashCode",
          "notify",
          "notifyAll",
          "toString",
          "wait",
          "asInstanceOf",
          "isInstanceOf",
          "synchronized",
          "==",
          "!=",
          "eq",
          "ne",
          "##",
          "writeReplace" // Scala 3-only, private def for serialization only
        ) <==> Data.map(
          "apply(Int)" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(1),
            "isNullary" -> Data(false),
            "isUnary" -> Data(true),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          )
        )
      }

      test("for scope visibility from the outside") {
        val envDependedPosition =
          if (LanguageVersion.byHearth.isScala2_13) Data("None")
          else Data("Some(hearth-tests/src/main/scala/hearth/examples/methods.scala:1:1)")

        testMethodsExtraction[examples.methods.ScopeVisibility](
          "clone",
          "equals",
          "finalize",
          "getClass",
          "hashCode",
          "notify",
          "notifyAll",
          "toString",
          "wait",
          "asInstanceOf",
          "isInstanceOf",
          "synchronized",
          "==",
          "!=",
          "eq",
          "ne",
          "##",
          "writeReplace" // Scala 3-only, private def for serialization only
        ) <==> Data.map(
          "privateCtorArg" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(true),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(false),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(false),
            "arity" -> Data(0),
            "isNullary" -> Data(true),
            "isUnary" -> Data(false),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(true),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(true),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(true),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(true)
          ),
          "publicCtorArg" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(true),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(false),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(0),
            "isNullary" -> Data(true),
            "isUnary" -> Data(false),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(true),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(true),
            "isScalaSetter" -> Data(false),
            "isScalaAccessor" -> Data(true),
            "isJavaGetter" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(true)
          ),
          "publicMethod" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(true),
            "arity" -> Data(0),
            "isNullary" -> Data(true),
            "isUnary" -> Data(false),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          ),
          "privateMethod" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(false),
            "arity" -> Data(0),
            "isNullary" -> Data(true),
            "isUnary" -> Data(false),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          ),
          "protectedMethod" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(false),
            "arity" -> Data(0),
            "isNullary" -> Data(true),
            "isUnary" -> Data(false),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          ),
          "privateThisMethod" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(false),
            "arity" -> Data(0),
            "isNullary" -> Data(true),
            "isUnary" -> Data(false),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          ),
          "privateHearthMethod" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(false),
            "arity" -> Data(0),
            "isNullary" -> Data(true),
            "isUnary" -> Data(false),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          ),
          "privateHearthExamplesMethod" -> Data.map(
            "invocation" -> Data("OnInstance"),
            "hasTypeParameters" -> Data(false),
            "position" -> envDependedPosition,
            "annotations" -> Data.list(),
            "isConstructor" -> Data(false),
            "isVal" -> Data(false),
            "isVar" -> Data(false),
            "isLazy" -> Data(false),
            "isDef" -> Data(true),
            "isImplicit" -> Data(false),
            "isDeclared" -> Data(true),
            "isSynthetic" -> Data(false),
            "isInherited" -> Data(false),
            "isAvailable(Everywhere)" -> Data(false),
            "arity" -> Data(0),
            "isNullary" -> Data(true),
            "isUnary" -> Data(false),
            "isBinary" -> Data(false),
            "isConstructorArgument" -> Data(false),
            "isCaseField" -> Data(false),
            "isScalaGetter" -> Data(false),
            "isScalaSetter" -> Data(false),
            "isJavaGetter" -> Data(false),
            "isScalaAccessor" -> Data(false),
            "isJavaSetter" -> Data(false),
            "isJavaAccessor" -> Data(false),
            "isAccessor" -> Data(false)
          )
        )

        // TODO: repeat inside class extending tested object
      }
    }

    // TODO: attempt calling methods

    // TODO: attempt calling methods with default values

    // TODO: attempt calling companion methods
  }
}
